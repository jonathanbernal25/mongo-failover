Parameters:
  KeyPairName:
    Type: String

Resources:
  DatabaseSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic from everywhere
      SecurityGroupIngress:
        IpProtocol: -1
        CidrIp: 0.0.0.0/0
  MongoA1:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          yum update -y
          
          cat > /etc/yum.repos.d/mongodb-org-4.4.repo <<EOF
          [mongodb-org-4.4]
          name=MongoDB Repository
          baseurl=https://repo.mongodb.org/yum/redhat/\$releasever/mongodb-org/4.4/x86_64/
          gpgcheck=1
          enabled=1
          gpgkey=https://www.mongodb.org/static/pgp/server-4.4.asc
          EOF
          
          yum install mongodb-org -y

          sed -i '29s/.*/  bindIp: 0.0.0.0/' /etc/mongod.conf
          sed -i '36s/.*/replication:/' /etc/mongod.conf
          sed -i '37s/.*/  replSetName: hello/' /etc/mongod.conf

          systemctl start mongod
   
      ImageId: ami-0f86a70488991335e
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref DatabaseSG
      KeyName: !Ref KeyPairName
      AvailabilityZone: ap-southeast-1a
      Tags:
        - Key: "Name"
          Value: mongoA1
 
  MongoA2:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          yum update -y
          
          cat > /etc/yum.repos.d/mongodb-org-4.4.repo <<EOF
          [mongodb-org-4.4]
          name=MongoDB Repository
          baseurl=https://repo.mongodb.org/yum/redhat/\$releasever/mongodb-org/4.4/x86_64/
          gpgcheck=1
          enabled=1
          gpgkey=https://www.mongodb.org/static/pgp/server-4.4.asc
          EOF
          
          yum install mongodb-org -y

          sed -i '29s/.*/  bindIp: 0.0.0.0/' /etc/mongod.conf
          sed -i '36s/.*/replication:/' /etc/mongod.conf
          sed -i '37s/.*/  replSetName: hello/' /etc/mongod.conf

          systemctl start mongod

      ImageId: ami-0f86a70488991335e
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref DatabaseSG
      KeyName: !Ref KeyPairName
      AvailabilityZone: ap-southeast-1a
      Tags:
        - Key: "Name"
          Value: mongoA2

  MongoB1:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          yum update -y
          
          cat > /etc/yum.repos.d/mongodb-org-4.4.repo <<EOF
          [mongodb-org-4.4]
          name=MongoDB Repository
          baseurl=https://repo.mongodb.org/yum/redhat/\$releasever/mongodb-org/4.4/x86_64/
          gpgcheck=1
          enabled=1
          gpgkey=https://www.mongodb.org/static/pgp/server-4.4.asc
          EOF
          
          yum install mongodb-org -y

          sed -i '29s/.*/  bindIp: 0.0.0.0/' /etc/mongod.conf
          sed -i '36s/.*/replication:/' /etc/mongod.conf
          sed -i '37s/.*/  replSetName: hello/' /etc/mongod.conf

          systemctl start mongod

      ImageId: ami-0f86a70488991335e
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref DatabaseSG
      KeyName: !Ref KeyPairName
      AvailabilityZone: ap-southeast-1b
      Tags:
        - Key: "Name"
          Value: mongoB1

  Temp:
    Type: AWS::EC2::Instance
    DependsOn: 
      - MongoA1
      - MongoA2
      - MongoB1
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          cat > /home/ec2-user/copypaste <<EOF
          # STEP 0 - Create the ReplicaSet
          # Run command from A1 commandline:
          mongo --eval 'rs.initiate({_id : "hello", members: [{_id: 0, host: "${MongoA1.PublicIp}:27017", priority: 10}, {_id: 1, host: "${MongoA2.PublicIp}:27017", priority: 8}, {_id: 2, host: "${MongoB1.PublicIp}:27017", priority: 6}]})' --quiet

          ####### Checkpoint 0 - READ/WRITE ON DC1
          # Use this command to connect to ReplicaSet 
          mongo --host hello/${MongoA1.PublicIp},${MongoA2.PublicIp},${MongoB1.PublicIp}

          # Use this command to simulate writes to ReplicaSet
          db.test_data_checkpoint_0.insertOne({ item: "canvas", qty: 100, tags: ["cotton"], size: { h: 28, w: 35.5, uom: "cm" } })

          # A1 : Primary
          # A2 : Secondary
          # B1 : Secondary

          # STEP 1 - Bring down a member
          # Stop mongo service on member:
          sudo systemctl stop mongod

          # Use this command to simulate writes to ReplicaSet
          db.test_data_checkpoint_1.insertOne({ item: "canvas", qty: 100, tags: ["cotton"], size: { h: 28, w: 35.5, uom: "cm" } })

          # STEP 2 - Bring down a member
          # Stop mongo service on member:
          sudo systemctl stop mongod

          ####### Checkpoint 2 - READ/WRITE ON DC1
          # Use this command to connect to ReplicaSet from external host
          mongo --host hello/${MongoA1.PublicIp},${MongoA2.PublicIp},${MongoB1.PublicIp}
          # Use this command to simulate writes to ReplicaSet
          db.test_data_checkpoint_2.insertOne({ item: "canvas", qty: 100, tags: ["cotton"], size: { h: 28, w: 35.5, uom: "cm" } })

          # STEP 3 - Bring down a member
          # Stop mongo service on member:
          sudo systemctl stop mongod

          # We cannot connect to the ReplicaSet, we cannot READ, we cannot WRITE. 
          # To allow READ, issue the following command on member B1 AND/OR B2 to allow READ from that member.
          rs.secondaryOk()

          #####################################################
          ####### FORCING RECONFIGURATION OF REPLICASET #######
          #####################################################
          # Step 1 - From the desired PRIMARY, backup the ReplicaSet configuration.
          cfg = rs.conf()

          # Step 2 - From the desired PRIMARY, remove the unreachable members from the ReplicaSet, by setting the array equal to the surviving members ONLY.
          # In our case: array position 3 and array position 4 are the remaining members (B1 and B2).
          cfg.members = [cfg.members[3] , cfg.members[4]]

          # Step 3 - From the desired PRIMARY, reconfigure the set by force.
          rs.reconfig(cfg, {force : true})


          # Use this command to simulate writes to ReplicaSet
          db.test_data_checkpoint_DELTA.insertOne({ item: "canvas", qty: 100, tags: ["cotton"], size: { h: 28, w: 35.5, uom: "cm" } })

          ####################################################
          ########## SIMULATE DC1 RETURN TO SERVICE ##########
          ####################################################
          # Step 1 - Bring back a member
          sudo systemctl start mongod

          # From PRIMARY member, select member to bring back with ReplicaSet
          
          # A1
          rs.add( { host: "${MongoA1.PublicIp}:27017" } )
          # A2
          rs.add( { host: "${MongoA2.PublicIp}:27017" } )
          #A3
          rs.add( { host: "${MongoB1.PublicIp}:27017" } )


          # NOTE: We have rejoined the ReplicaSet in the following order, beginning with A3, then A2, then A1, in that order, thus our array will be as follows:
          # member[0] = B1
          # member[1] = B2
          # member[2] = A3
          # member[3] = A2
          # member[4] = A1


          ##################################################
          ########## MOVE PRIMARY FROM DC2 -> DC1 ##########
          ##################################################
          # Step 1 - From the PRIMARY, backup the ReplicaSet configuration.
          cfg = rs.conf()
          
          # Step 2 - Assign new priority for every member in the ReplicaSet
          cfg.members[0].priority = 2
          cfg.members[1].priority = 4
          cfg.members[2].priority = 6
          cfg.members[3].priority = 8
          cfg.members[4].priority = 10

          # Step 3 - Apply new configuration
          rs.reconfig(cfg)

          # NOTE: Since member A1 has the highest priority, it will become PRIMARY, and thus it remains in DC1.

          EOF

      ImageId: ami-0f86a70488991335e
      InstanceType: t2.micro
      SecurityGroupIds: 
        - !Ref DatabaseSG
      KeyName: !Ref KeyPairName
      AvailabilityZone: ap-southeast-1b
      Tags:
        - Key: "Name"
          Value: temp
